version: '3'
services:
  ngrok:
    image: wernight/ngrok
    environment:
      - MEDIATOR_AGENT_HTTP_IN_PORT=${MEDIATOR_AGENT_HTTP_IN_PORT}
    networks:
      - mediator-network
    command: ngrok http mediator:${MEDIATOR_AGENT_HTTP_IN_PORT} --log stdout

  ngrok_ws:
    image: wernight/ngrok
    environment:
      - MEDIATOR_AGENT_WS_IN_PORT=${MEDIATOR_AGENT_WS_IN_PORT}
    networks:
      - mediator-network
    command: ngrok http mediator:${MEDIATOR_AGENT_WS_IN_PORT} --log stdout

  tunnel:
    image: dbluhm/agent-tunnel
    networks:
      - mediator-network
    command: -s mediator:${MEDIATOR_AGENT_HTTP_IN_PORT} -p 4040 --host ${AGENT_TUNNEL_HOST}

  tunnel_ws:
    image: dbluhm/agent-tunnel
    networks:
      - mediator-network
    command: -s mediator:${MEDIATOR_AGENT_WS_IN_PORT} -p 4040 --host ${AGENT_TUNNEL_HOST}

  mediator-controller:
    image: node:fermium
    hostname: mediator-controller
    restart: unless-stopped
    environment:
      - PORT=${MEDIATOR_CONTROLLER_PORT}
      - CONTROLLER_ADMIN_API_KEY=${MEDIATOR_CONTROLLER_ADMIN_API_KEY}
      - MEDIATOR_ADMIN_URL=${MEDIATOR_AGENT_ADMIN_URL}
      - MEDIATOR_ADMIN_API_KEY=${MEDIATOR_AGENT_ADMIN_API_KEY}
      - MEDIATOR_ALIAS=${MEDIATOR_ALIAS}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./acapy/controller:/usr/src/controller
      - mediator-controller-data:/usr/src/controller/node_modules
    ports:
      - ${MEDIATOR_CONTROLLER_PORT}:${MEDIATOR_CONTROLLER_PORT}
    networks:
      - mediator-network
    working_dir: /usr/src/controller
    depends_on:
      - mediator
    entrypoint: /bin/bash
    command: ["-c", "npm install; npm run dev"]

  mediator:
    build:
      context: .
      dockerfile: acapy/Dockerfile.acapy
    hostname: mediator
    restart: unless-stopped
    environment:
      - ENV=${ENV:-local}
      - POSTGRESQL_HOST=${POSTGRESQL_HOST}
      - POSTGRESQL_PORT=${POSTGRESQL_PORT}
      - ACAPY_WALLET_STORAGE_CONFIG={"url":"${POSTGRESQL_HOST}:${POSTGRESQL_PORT}","wallet_scheme":"DatabasePerWallet"}
      - ACAPY_WALLET_STORAGE_CREDS={"account":"${POSTGRESQL_USER}","password":"${POSTGRESQL_PASSWORD}","admin_account":"${POSTGRESQL_ADMIN_USER}","admin_password":"${POSTGRESQL_ADMIN_PASSWORD}"}
      - ACAPY_WALLET_NAME=${MEDIATOR_WALLET_NAME}
      - ACAPY_WALLET_KEY=${MEDIATOR_WALLET_KEY}
      - MEDIATOR_AGENT_HTTP_IN_PORT=${MEDIATOR_AGENT_HTTP_IN_PORT}
      - MEDIATOR_AGENT_WS_IN_PORT=${MEDIATOR_AGENT_WS_IN_PORT}
      - MEDIATOR_AGENT_HTTP_ADMIN_PORT=${MEDIATOR_AGENT_HTTP_ADMIN_PORT}
      - MEDIATOR_AGENT_ADMIN_MODE=${MEDIATOR_AGENT_ADMIN_MODE}
      - MEDIATOR_AGENT_LABEL=${MEDIATOR_AGENT_LABEL}
      - MEDIATOR_ENDPOINT_URL=${MEDIATOR_ENDPOINT_URL}
      - MEDIATOR_ARG_FILE=${MEDIATOR_ARG_FILE}
      - MEDIATOR_CONTROLLER_WEBHOOK=${MEDIATOR_CONTROLLER_WEBHOOK}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - ${MEDIATOR_AGENT_HTTP_ADMIN_PORT}:${MEDIATOR_AGENT_HTTP_ADMIN_PORT}
      - ${MEDIATOR_AGENT_HTTP_IN_PORT}:${MEDIATOR_AGENT_HTTP_IN_PORT}
      - ${MEDIATOR_AGENT_WS_IN_PORT}:${MEDIATOR_AGENT_WS_IN_PORT}
    depends_on:
      - "db"
    networks:
      - mediator-network

  # DB Service
  db:
    image: postgres:10
    hostname: db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRESQL_ADMIN_PASSWORD}
    ports: # Uncomment to access postgres outside of containers
      - "5432:5432"
    networks:
      - mediator-network
    volumes:
      - agency-wallet:/var/lib/pgsql/data

#Docker Networks
networks:
  mediator-network:

volumes:
  agency-wallet:
  mediator-controller-data:
